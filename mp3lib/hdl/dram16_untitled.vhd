-- ADDED TIMING VALIDATION JANUARY 2010
--
-- VHDL ARCHITECTURE ECE411.DRAM16.UNTITLED
--
-- CREATED:
--          BY - HERSTAD.STDT (GLSN23.EWS.UIUC.EDU)
--          AT - 14:33:34 11/04/03
--
-- GENERATED BY MENTOR GRAPHICS' HDL DESIGNER(TM) 2001.5 (BUILD 170)
--
LIBRARY IEEE;
USE IEEE.STD_LOGIC_1164.ALL;
USE IEEE.NUMERIC_STD.ALL;
LIBRARY ECE411;
USE ECE411.LC3B_TYPES.ALL;

ENTITY DRAM16 IS
PORT( 
	ADDRESS  : IN     LC3B_WORD;
	DATAIN   : IN     LC3B_WORD;
	MREAD_L  : IN     STD_LOGIC;
	MWRITE_L : IN     STD_LOGIC;
	RESET_L  : IN     STD_LOGIC;
	DATAOUT  : OUT    LC3B_WORD;
	MRESP_H  : OUT    STD_LOGIC
);
-- DECLARATIONS
END DRAM16 ;

ARCHITECTURE UNTITLED OF DRAM16 IS
BEGIN
	-------------------------------------------------------------------
	VHDL_MEMORY : PROCESS (RESET_L, MREAD_L, MWRITE_L) 
	-------------------------------------------------------------------
	VARIABLE MEM : MEMORY_ARRAY_64K;
	VARIABLE INT_OLD_ADDRESS : INTEGER;
	VARIABLE INT_ADDRESS : INTEGER;
	BEGIN
		INT_ADDRESS := TO_INTEGER(UNSIGNED(ADDRESS(15 DOWNTO 1) & '0'));
		IF RESET_L = '0' THEN
			MRESP_H <= '0';
		MYDRAMINIT_64K(MEM);
		ELSE
			IF ((INT_ADDRESS >= 0) AND (INT_ADDRESS <= 65535)) THEN
				IF (MWRITE_L'EVENT AND (MWRITE_L'LAST_VALUE = '0') AND (INT_ADDRESS /= INT_OLD_ADDRESS)) THEN
					ASSERT FALSE 
					REPORT "MEMORY WRITE TIMING ERROR"
					SEVERITY NOTE;
				END IF;
				IF (MREAD_L'EVENT AND (MREAD_L'LAST_VALUE = '0') AND (INT_ADDRESS /= INT_OLD_ADDRESS)) THEN
					ASSERT FALSE 
					REPORT "MEMORY READ TIMING ERROR"
					SEVERITY NOTE;
				END IF;
				IF (MREAD_L = '0' AND MWRITE_L = '1') THEN
					DATAOUT(7 DOWNTO 0) <= MEM(INT_ADDRESS) AFTER DELAY_16B_MEM;
					DATAOUT(15 DOWNTO 8) <= MEM(INT_ADDRESS + 1) AFTER DELAY_16B_MEM;
					MRESP_H <= '1' AFTER DELAY_16B_MEM, '0' AFTER DELAY_16B_MEM + CLOCK_PERIOD;
				ELSIF (MWRITE_L = '0' AND MREAD_L = '1') THEN
					MEM(INT_ADDRESS) := DATAIN(7 DOWNTO 0);
					MEM(INT_ADDRESS + 1) := DATAIN(15 DOWNTO 8);
					MRESP_H <= '1' AFTER DELAY_16B_MEM, '0' AFTER DELAY_16B_MEM + CLOCK_PERIOD;
				ELSIF (MWRITE_L = '0' AND MREAD_L = '0') THEN
					ASSERT FALSE 
					REPORT "ATTEMPTING TO READ AND WRITE DRAM SIMULTANEOUSLY."
					SEVERITY ERROR;
				END IF;
			ELSE
				ASSERT FALSE
				REPORT "INVALID ADDRESS SENT TO DRAM."
				SEVERITY WARNING;
			END IF;
		END IF;
	END PROCESS VHDL_MEMORY;
END UNTITLED;