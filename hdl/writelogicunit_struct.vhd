-- VHDL Entity ece411.WriteLogicUnit.symbol
--
-- Created:
--          by - rchoxi2.stdt (eelnx36.ews.illinois.edu)
--          at - 23:40:02 11/30/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY WriteLogicUnit IS
   PORT( 
      LRUsel      : IN     std_logic;
      WriteAccess : IN     std_logic;
      dirty_gate  : IN     std_logic;
      in_idlehit  : IN     std_logic;
      in_load     : IN     std_logic;
      pmresp_h    : IN     std_logic;
      prehit      : IN     std_logic;
      DataWrite   : OUT    std_logic;
      DirtyIn     : OUT    std_logic
   );

-- Declarations

END WriteLogicUnit ;

--
-- VHDL Architecture ece411.WriteLogicUnit.struct
--
-- Created:
--          by - rchoxi2.stdt (eelnx36.ews.illinois.edu)
--          at - 23:40:02 11/30/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF WriteLogicUnit IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL s  : std_logic;
   SIGNAL s1 : std_logic;

   -- Implicit buffer signal declarations
   SIGNAL DirtyIn_internal : std_logic;


   -- Component Declarations
   COMPONENT and2
   PORT (
      a : IN     std_logic ;
      b : IN     std_logic ;
      s : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT and3
   PORT (
      a : IN     std_logic ;
      b : IN     std_logic ;
      c : IN     std_logic ;
      s : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT or2
   PORT (
      a : IN     std_logic ;
      b : IN     std_logic ;
      s : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : and2 USE ENTITY ece411.and2;
   FOR ALL : and3 USE ENTITY ece411.and3;
   FOR ALL : or2 USE ENTITY ece411.or2;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_3 : and2
      PORT MAP (
         a => dirty_gate,
         b => s1,
         s => DataWrite
      );
   U_0 : and3
      PORT MAP (
         a => LRUsel,
         b => pmresp_h,
         c => in_load,
         s => s
      );
   U_1 : and3
      PORT MAP (
         a => prehit,
         b => in_idlehit,
         c => WriteAccess,
         s => DirtyIn_internal
      );
   U_2 : or2
      PORT MAP (
         a => s,
         b => DirtyIn_internal,
         s => s1
      );

   -- Implicit buffered output assignments
   DirtyIn <= DirtyIn_internal;

END struct;
