-- VHDL Entity ece411.ByteWriteLogic.interface
--
-- Created:
--          by - tkalbar2.stdt (gllnx16.ews.illinois.edu)
--          at - 05:25:23 11/12/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY ByteWriteLogic IS
   PORT( 
      AdjSel_MEM : IN     std_logic;
      LSB        : IN     std_logic;
      Write_MEM  : IN     std_logic;
      WriteH_L   : OUT    std_logic;
      WriteL_L   : OUT    std_logic
   );

-- Declarations

END ByteWriteLogic ;

--
-- VHDL Architecture ece411.ByteWriteLogic.struct
--
-- Created:
--          by - tkalbar2.stdt (gllnx16.ews.illinois.edu)
--          at - 05:25:23 11/12/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF ByteWriteLogic IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL s  : std_logic;
   SIGNAL s1 : std_logic;
   SIGNAL s2 : std_logic;
   SIGNAL s3 : std_logic;


   -- Component Declarations
   COMPONENT and2
   PORT (
      a : IN     std_logic ;
      b : IN     std_logic ;
      s : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT mynot
   PORT (
      a : IN     std_logic ;
      s : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT or2
   PORT (
      a : IN     std_logic ;
      b : IN     std_logic ;
      s : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : and2 USE ENTITY ece411.and2;
   FOR ALL : mynot USE ENTITY ece411.mynot;
   FOR ALL : or2 USE ENTITY ece411.or2;
   -- pragma synthesis_on


BEGIN

   -- Instance port mappings.
   U_2 : and2
      PORT MAP (
         a => s,
         b => LSB,
         s => s2
      );
   U_3 : and2
      PORT MAP (
         a => s,
         b => s1,
         s => s3
      );
   U_0 : mynot
      PORT MAP (
         a => AdjSel_MEM,
         s => s
      );
   U_1 : mynot
      PORT MAP (
         a => LSB,
         s => s1
      );
   U_4 : or2
      PORT MAP (
         a => Write_MEM,
         b => s2,
         s => WriteH_L
      );
   U_5 : or2
      PORT MAP (
         a => Write_MEM,
         b => s3,
         s => WriteL_L
      );

END struct;
