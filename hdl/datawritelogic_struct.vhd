-- VHDL Entity ece411.DataWriteLogic.interface
--
-- Created:
--          by - rchoxi2.stdt (eelnx36.ews.illinois.edu)
--          at - 23:51:33 11/30/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

ENTITY DataWriteLogic IS
   PORT( 
      LRUout      : IN     lc3b_reg;
      WriteAccess : IN     std_logic;
      dirty_gate  : IN     std_logic;
      in_idlehit  : IN     std_logic;
      in_load     : IN     std_logic;
      pmresp_h    : IN     std_logic;
      prehit0     : IN     std_logic;
      prehit1     : IN     std_logic;
      prehit2     : IN     std_logic;
      prehit3     : IN     std_logic;
      prehit4     : IN     std_logic;
      prehit5     : IN     std_logic;
      prehit6     : IN     std_logic;
      prehit7     : IN     std_logic;
      DataWrite0  : OUT    std_logic;
      DataWrite1  : OUT    std_logic;
      DataWrite2  : OUT    std_logic;
      DataWrite3  : OUT    std_logic;
      DataWrite4  : OUT    std_logic;
      DataWrite5  : OUT    std_logic;
      DataWrite6  : OUT    std_logic;
      DataWrite7  : OUT    std_logic;
      DirtyIn0    : OUT    std_logic;
      DirtyIn1    : OUT    std_logic;
      DirtyIn2    : OUT    std_logic;
      DirtyIn3    : OUT    std_logic;
      DirtyIn4    : OUT    std_logic;
      DirtyIn5    : OUT    std_logic;
      DirtyIn6    : OUT    std_logic;
      DirtyIn7    : OUT    std_logic
   );

-- Declarations

END DataWriteLogic ;

--
-- VHDL Architecture ece411.DataWriteLogic.struct
--
-- Created:
--          by - rchoxi2.stdt (eelnx36.ews.illinois.edu)
--          at - 23:51:33 11/30/10
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2005.3 (Build 75)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.NUMERIC_STD.all;

LIBRARY ece411;
USE ece411.LC3b_types.all;

LIBRARY ece411;

ARCHITECTURE struct OF DataWriteLogic IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL offset_d : lc3b_coffset;
   SIGNAL w0       : std_logic;
   SIGNAL w1       : std_logic;
   SIGNAL w2       : std_logic;
   SIGNAL w3       : std_logic;
   SIGNAL w4       : std_logic;
   SIGNAL w5       : std_logic;
   SIGNAL w6       : std_logic;
   SIGNAL w7       : std_logic;


   -- Component Declarations
   COMPONENT WriteLogicUnit
   PORT (
      LRUsel      : IN     std_logic ;
      WriteAccess : IN     std_logic ;
      dirty_gate  : IN     std_logic ;
      in_idlehit  : IN     std_logic ;
      in_load     : IN     std_logic ;
      pmresp_h    : IN     std_logic ;
      prehit      : IN     std_logic ;
      DataWrite   : OUT    std_logic ;
      DirtyIn     : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT decoder38
   PORT (
      offset_d : IN     lc3b_coffset ;
      w0       : OUT    std_logic ;
      w1       : OUT    std_logic ;
      w2       : OUT    std_logic ;
      w3       : OUT    std_logic ;
      w4       : OUT    std_logic ;
      w5       : OUT    std_logic ;
      w6       : OUT    std_logic ;
      w7       : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : WriteLogicUnit USE ENTITY ece411.WriteLogicUnit;
   FOR ALL : decoder38 USE ENTITY ece411.decoder38;
   -- pragma synthesis_on


BEGIN
   -- Architecture concurrent statements
   -- HDL Embedded Text Block 1 eb1
   offset_d <= LRUout & '0';                             


   -- Instance port mappings.
   U_0 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w0,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit0,
         DataWrite   => DataWrite0,
         DirtyIn     => DirtyIn0
      );
   U_1 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w1,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit1,
         DataWrite   => DataWrite1,
         DirtyIn     => DirtyIn1
      );
   U_2 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w2,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit2,
         DataWrite   => DataWrite2,
         DirtyIn     => DirtyIn2
      );
   U_3 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w3,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit3,
         DataWrite   => DataWrite3,
         DirtyIn     => DirtyIn3
      );
   U_4 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w4,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit4,
         DataWrite   => DataWrite4,
         DirtyIn     => DirtyIn4
      );
   U_5 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w5,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit5,
         DataWrite   => DataWrite5,
         DirtyIn     => DirtyIn5
      );
   U_6 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w6,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit6,
         DataWrite   => DataWrite6,
         DirtyIn     => DirtyIn6
      );
   U_7 : WriteLogicUnit
      PORT MAP (
         LRUsel      => w7,
         WriteAccess => WriteAccess,
         dirty_gate  => dirty_gate,
         in_idlehit  => in_idlehit,
         in_load     => in_load,
         pmresp_h    => pmresp_h,
         prehit      => prehit7,
         DataWrite   => DataWrite7,
         DirtyIn     => DirtyIn7
      );
   U_8 : decoder38
      PORT MAP (
         offset_d => offset_d,
         w0       => w0,
         w1       => w1,
         w2       => w2,
         w3       => w3,
         w4       => w4,
         w5       => w5,
         w6       => w6,
         w7       => w7
      );

END struct;
